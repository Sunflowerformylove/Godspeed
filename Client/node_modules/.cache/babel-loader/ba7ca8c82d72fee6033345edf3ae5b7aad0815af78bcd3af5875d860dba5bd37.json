{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dodin\\\\Desktop\\\\Godspeed\\\\Client\\\\src\\\\Components\\\\AudioRecorder.js\",\n  _s = $RefreshSig$();\nimport \"../Style/Recorder.css\";\nimport { useState, useEffect, useRef, forwardRef } from \"react\";\nimport { IonIcon } from \"@ionic/react\";\nimport * as Icon from \"ionicons/icons\";\nimport { parse } from \"@fortawesome/fontawesome-svg-core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [playIcon, setPlayIcon] = useState(Icon.pause);\n  const [progress, setProgress] = useState(0); // 0 - 100\n  const [duration, setDuration] = useState(0); // seconds 0 - 60\n  const [time, setTime] = useState(\"0:00\");\n  function formatTime(time) {\n    let seconds = time % 60;\n    let minutes = Math.floor(time / 60);\n    if (seconds < 10) {\n      return `${minutes}:0${seconds}`;\n    } else {\n      return `${minutes}:${seconds}`;\n    }\n  }\n  const progressRef = useRef(null);\n  useEffect(() => {\n    if (props.flag.timer === true) {\n      setPlayIcon(Icon.pause);\n      if (progress !== 0 && progress !== 100) {\n        progressRef.current.style.width = `${progress}%`;\n      } else if (progress === 100) {\n        progressRef.current.style.width = `0%`;\n        setProgress(0);\n        setTime(\"0:00\");\n        setDuration(0);\n        clearInterval(interval);\n        props.flag.setTimer(false);\n      }\n    }\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"recorderContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"maxDuration\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: progressRef,\n        className: \"currentDuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recordingTime\",\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IonIcon, {\n      icon: playIcon,\n      className: \"pauseIcon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IonIcon, {\n      icon: Icon.refresh,\n      className: \"restartIcon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}, \"LDSHeagX62pxCfhHC2PTQ0/XgCE=\")), \"LDSHeagX62pxCfhHC2PTQ0/XgCE=\");\n_c2 = AudioRecorder;\nexport default AudioRecorder;\nvar _c, _c2;\n$RefreshReg$(_c, \"AudioRecorder$forwardRef\");\n$RefreshReg$(_c2, \"AudioRecorder\");","map":{"version":3,"names":["useState","useEffect","useRef","forwardRef","IonIcon","Icon","parse","jsxDEV","_jsxDEV","AudioRecorder","_s","_c","props","ref","playIcon","setPlayIcon","pause","progress","setProgress","duration","setDuration","time","setTime","formatTime","seconds","minutes","Math","floor","progressRef","flag","timer","current","style","width","clearInterval","interval","setTimer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","refresh","_c2","$RefreshReg$"],"sources":["C:/Users/dodin/Desktop/Godspeed/Client/src/Components/AudioRecorder.js"],"sourcesContent":["import \"../Style/Recorder.css\";\r\nimport { useState, useEffect, useRef, forwardRef } from \"react\";\r\nimport { IonIcon } from \"@ionic/react\";\r\nimport * as Icon from \"ionicons/icons\";\r\nimport { parse } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst AudioRecorder = forwardRef((props, ref) => {\r\n    const [playIcon, setPlayIcon] = useState(Icon.pause);\r\n    const [progress, setProgress] = useState(0); // 0 - 100\r\n    const [duration, setDuration] = useState(0); // seconds 0 - 60\r\n    const [time, setTime] = useState(\"0:00\");\r\n    function formatTime(time) {\r\n        let seconds = time % 60;\r\n        let minutes = Math.floor(time / 60);\r\n        if (seconds < 10) {\r\n            return `${minutes}:0${seconds}`;\r\n        }\r\n        else {\r\n            return `${minutes}:${seconds}`;\r\n        }\r\n    }\r\n    const progressRef = useRef(null);\r\n    useEffect(() => {\r\n        if(props.flag.timer === true){\r\n            setPlayIcon(Icon.pause);\r\n            \r\n            if (progress !== 0 && progress !== 100) {\r\n                progressRef.current.style.width = `${progress}%`;\r\n            }\r\n            else if (progress === 100) {\r\n                progressRef.current.style.width = `0%`;\r\n                setProgress(0);\r\n                setTime(\"0:00\");\r\n                setDuration(0);\r\n                clearInterval(interval);\r\n                props.flag.setTimer(false);\r\n            }\r\n        }\r\n    }, [props])\r\n    return (\r\n        <div ref = {ref} className=\"recorderContainer\">\r\n            <div className=\"maxDuration\"><div ref={progressRef} className=\"currentDuration\"></div></div>\r\n            <div className=\"recordingTime\">{time}</div>\r\n            <IonIcon icon={playIcon} className=\"pauseIcon\"></IonIcon>\r\n            <IonIcon icon={Icon.refresh} className=\"restartIcon\"></IonIcon>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default AudioRecorder;"],"mappings":";;AAAA,OAAO,uBAAuB;AAC9B,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,OAAO;AAC/D,SAASC,OAAO,QAAQ,cAAc;AACtC,OAAO,KAAKC,IAAI,MAAM,gBAAgB;AACtC,SAASC,KAAK,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,aAAa,gBAAAC,EAAA,eAAGP,UAAU,CAAAQ,EAAA,GAAAD,EAAA,CAAC,CAACE,KAAK,EAAEC,GAAG,KAAK;EAAAH,EAAA;EAC7C,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAACK,IAAI,CAACW,KAAK,CAAC;EACpD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,MAAM,CAAC;EACxC,SAASuB,UAAUA,CAACF,IAAI,EAAE;IACtB,IAAIG,OAAO,GAAGH,IAAI,GAAG,EAAE;IACvB,IAAII,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACN,IAAI,GAAG,EAAE,CAAC;IACnC,IAAIG,OAAO,GAAG,EAAE,EAAE;MACd,OAAQ,GAAEC,OAAQ,KAAID,OAAQ,EAAC;IACnC,CAAC,MACI;MACD,OAAQ,GAAEC,OAAQ,IAAGD,OAAQ,EAAC;IAClC;EACJ;EACA,MAAMI,WAAW,GAAG1B,MAAM,CAAC,IAAI,CAAC;EAChCD,SAAS,CAAC,MAAM;IACZ,IAAGW,KAAK,CAACiB,IAAI,CAACC,KAAK,KAAK,IAAI,EAAC;MACzBf,WAAW,CAACV,IAAI,CAACW,KAAK,CAAC;MAEvB,IAAIC,QAAQ,KAAK,CAAC,IAAIA,QAAQ,KAAK,GAAG,EAAE;QACpCW,WAAW,CAACG,OAAO,CAACC,KAAK,CAACC,KAAK,GAAI,GAAEhB,QAAS,GAAE;MACpD,CAAC,MACI,IAAIA,QAAQ,KAAK,GAAG,EAAE;QACvBW,WAAW,CAACG,OAAO,CAACC,KAAK,CAACC,KAAK,GAAI,IAAG;QACtCf,WAAW,CAAC,CAAC,CAAC;QACdI,OAAO,CAAC,MAAM,CAAC;QACfF,WAAW,CAAC,CAAC,CAAC;QACdc,aAAa,CAACC,QAAQ,CAAC;QACvBvB,KAAK,CAACiB,IAAI,CAACO,QAAQ,CAAC,KAAK,CAAC;MAC9B;IACJ;EACJ,CAAC,EAAE,CAACxB,KAAK,CAAC,CAAC;EACX,oBACIJ,OAAA;IAAKK,GAAG,EAAIA,GAAI;IAACwB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC1C9B,OAAA;MAAK6B,SAAS,EAAC,aAAa;MAAAC,QAAA,eAAC9B,OAAA;QAAKK,GAAG,EAAEe,WAAY;QAACS,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC5FlC,OAAA;MAAK6B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEjB;IAAI;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC3ClC,OAAA,CAACJ,OAAO;MAACuC,IAAI,EAAE7B,QAAS;MAACuB,SAAS,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAW,eACzDlC,OAAA,CAACJ,OAAO;MAACuC,IAAI,EAAEtC,IAAI,CAACuC,OAAQ;MAACP,SAAS,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAW;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC7D;AAEd,CAAC,kCAAC;AAAAG,GAAA,GAzCIpC,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAAE,EAAA,EAAAkC,GAAA;AAAAC,YAAA,CAAAnC,EAAA;AAAAmC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}