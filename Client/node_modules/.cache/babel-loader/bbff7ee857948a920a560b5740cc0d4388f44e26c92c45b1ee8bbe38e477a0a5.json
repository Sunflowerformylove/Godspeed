{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dodin\\\\Desktop\\\\Godspeed\\\\Client\\\\src\\\\Components\\\\Video.js\";\nimport '../Style/Video.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getYouTubeVideoID(url) {\n  const query = url.split('?')[1];\n  const params = query.split('&');\n  const ID = params[0].split('=')[1];\n  return ID;\n}\nfunction embedYoutubeVideo(url) {\n  const ID = getYouTubeVideoID(url);\n  return `https://www.youtube.com/embed/${ID}`;\n}\nexport default function Video(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoContainer\",\n      children: props.origin === \"external\" ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"video\",\n        title: props.title,\n        src: props.src,\n        controls: true,\n        preload: \"auto\",\n        frameborder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        src: props.src,\n        controls: true,\n        preload: \"auto\",\n        crossOrigin: \"anonymous\",\n        className: \"video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Video;\nvar _c;\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","getYouTubeVideoID","url","query","split","params","ID","embedYoutubeVideo","Video","props","children","className","origin","title","src","controls","preload","frameborder","fileName","_jsxFileName","lineNumber","columnNumber","crossOrigin","_c","$RefreshReg$"],"sources":["C:/Users/dodin/Desktop/Godspeed/Client/src/Components/Video.js"],"sourcesContent":["import '../Style/Video.css'\r\n\r\nfunction getYouTubeVideoID(url){\r\n    const query = url.split('?')[1]\r\n    const params = query.split('&')\r\n    const ID = params[0].split('=')[1]\r\n    return ID\r\n}\r\n\r\nfunction embedYoutubeVideo(url){\r\n    const ID = getYouTubeVideoID(url)\r\n    return `https://www.youtube.com/embed/${ID}`\r\n}\r\n\r\nexport default function Video(props) {\r\n    return (<>\r\n        <div className=\"videoContainer\">\r\n            {props.origin === \"external\" \r\n            ? \r\n            <iframe className='video' title={props.title} src={props.src} controls preload='auto' frameborder=\"0\"></iframe> \r\n            : \r\n            <video src={props.src} controls preload='auto' crossOrigin='anonymous' className=\"video\"></video>}\r\n        </div>\r\n    </>)\r\n}"],"mappings":";AAAA,OAAO,oBAAoB;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3B,SAASC,iBAAiBA,CAACC,GAAG,EAAC;EAC3B,MAAMC,KAAK,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC/B,MAAMC,MAAM,GAAGF,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;EAC/B,MAAME,EAAE,GAAGD,MAAM,CAAC,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAClC,OAAOE,EAAE;AACb;AAEA,SAASC,iBAAiBA,CAACL,GAAG,EAAC;EAC3B,MAAMI,EAAE,GAAGL,iBAAiB,CAACC,GAAG,CAAC;EACjC,OAAQ,iCAAgCI,EAAG,EAAC;AAChD;AAEA,eAAe,SAASE,KAAKA,CAACC,KAAK,EAAE;EACjC,oBAAQX,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACJZ,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC1BD,KAAK,CAACG,MAAM,KAAK,UAAU,gBAE5Bd,OAAA;QAAQa,SAAS,EAAC,OAAO;QAACE,KAAK,EAAEJ,KAAK,CAACI,KAAM;QAACC,GAAG,EAAEL,KAAK,CAACK,GAAI;QAACC,QAAQ;QAACC,OAAO,EAAC,MAAM;QAACC,WAAW,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU,gBAE/GvB,OAAA;QAAOgB,GAAG,EAAEL,KAAK,CAACK,GAAI;QAACC,QAAQ;QAACC,OAAO,EAAC,MAAM;QAACM,WAAW,EAAC,WAAW;QAACX,SAAS,EAAC;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC/F,iBACP;AACP;AAACE,EAAA,GAVuBf,KAAK;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}